name: CI
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # --- Detect Node lockfile ---
      - name: Detect Node lockfile
        id: node
        shell: bash
        run: |
          if [[ -f package-lock.json || -f npm-shrinkwrap.json || -f yarn.lock ]]; then
            echo "has_node=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_node=false" >> "$GITHUB_OUTPUT"
          fi

      # --- Run Node steps only if a lockfile exists ---
      - name: Setup Node
        if: steps.node.outputs.has_node == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install (npm ci)
        if: steps.node.outputs.has_node == 'true'
        run: npm ci

      - name: Lint (npm)
        if: steps.node.outputs.has_node == 'true'
        run: npm run lint --if-present

      - name: Test (npm)
        if: steps.node.outputs.has_node == 'true'
        run: npm test --if-present -- --ci

      # --- Detect Python requirements ---
      - name: Detect Python requirements
        id: py
        shell: bash
        run: |
          if ls requirements*.txt >/dev/null 2>&1; then
            echo "has_py=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_py=false" >> "$GITHUB_OUTPUT"
          fi

      # --- Run Python steps only if requirements exist ---
      - name: Setup Python
        if: steps.py.outputs.has_py == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install (pip)
        if: steps.py.outputs.has_py == 'true'
        run: pip install -r requirements.txt

      - name: Test (pytest)
        if: steps.py.outputs.has_py == 'true'
        run: pytest -q
